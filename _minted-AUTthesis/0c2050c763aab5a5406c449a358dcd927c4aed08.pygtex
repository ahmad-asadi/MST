\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{tensorflow} \PYG{k+kn}{as} \PYG{n+nn}{tf}
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k+kn}{as} \PYG{n+nn}{np}
\PYG{k+kn}{import} \PYG{n+nn}{nltk}
\PYG{k+kn}{import} \PYG{n+nn}{os}
\PYG{k+kn}{import} \PYG{n+nn}{time}
\PYG{k+kn}{import} \PYG{n+nn}{resource}
\PYG{k+kn}{import} \PYG{n+nn}{math}
\PYG{k+kn}{import} \PYG{n+nn}{copy}
\PYG{k+kn}{import} \PYG{n+nn}{re}
\PYG{k+kn}{import} \PYG{n+nn}{logging}

\PYG{k+kn}{from} \PYG{n+nn}{data\PYGZus{}utils} \PYG{k+kn}{import} \PYG{n}{data\PYGZus{}helper}
\PYG{k+kn}{from} \PYG{n+nn}{main.neuralNetworks.cnn} \PYG{k+kn}{import} \PYG{n}{CNN} \PYG{k}{as} \PYG{n}{Encoder}
\PYG{k+kn}{from} \PYG{n+nn}{main.neuralNetworks.rnn} \PYG{k+kn}{import} \PYG{n}{StackedRNN} \PYG{k}{as} \PYG{n}{Decoder}
\PYG{k+kn}{from} \PYG{n+nn}{main.neuralNetworks.rnn} \PYG{k+kn}{import} \PYG{n}{RNNUtils} \PYG{k}{as} \PYG{n}{DecoderUtils}

\PYG{k+kn}{from} \PYG{n+nn}{matplotlib} \PYG{k+kn}{import} \PYG{n}{pyplot} \PYG{k}{as} \PYG{n}{plt}
\PYG{k+kn}{from} \PYG{n+nn}{multiprocessing} \PYG{k+kn}{import} \PYG{n}{Process}
\end{Verbatim}
